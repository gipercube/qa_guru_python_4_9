{"uid":"e40d24cb9a7bdaf7","name":"test_decorator_steps","fullName":"test_selene_with_decorator#test_decorator_steps","historyId":"a748a8029843952646122610cd90acaf","time":{"start":1680903191592,"stop":1680903192423,"duration":831},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55c42d23d243 <unknown>\n#1 0x55c42d0017a6 <unknown>\n#2 0x55c42d02a520 <unknown>\n#3 0x55c42d02649b <unknown>\n#4 0x55c42d0682a7 <unknown>\n#5 0x55c42d0678cf <unknown>\n#6 0x55c42d05ee53 <unknown>\n#7 0x55c42d0319ea <unknown>\n#8 0x55c42d032b2e <unknown>\n#9 0x55c42d291d5e <unknown>\n#10 0x55c42d295a80 <unknown>\n#11 0x55c42d2778b0 <unknown>\n#12 0x55c42d296b63 <unknown>\n#13 0x55c42d268f75 <unknown>\n#14 0x55c42d2b9998 <unknown>\n#15 0x55c42d2b9b27 <unknown>\n#16 0x55c42d2d4c23 <unknown>\n#17 0x7f862028eb43 <unknown>","statusTrace":"@allure.tag('browser')\n    @allure.severity(Severity.NORMAL)\n    @allure.label('owner', 'gipercube')\n    @allure.feature('Проверка отображения задачи #76 на github')\n    @allure.story('Я как пользовтель могу увидеть задачу с номером #76 для её открытия и оценки')\n    @allure.link('https://github.com', name='Testing')\n    def test_decorator_steps():\n        # GIVEN\n>       open_main_page()\n\ntest_selene_with_decorator.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_selene_with_decorator.py:29: in open_main_page\n    browser.open(\"https://github.com\")\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/browser.py:68: in open\n    self.config.get_or_create_driver().set_window_size(\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py:301: in get_or_create_driver\n    return self._source.get_or_create()\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py:135: in get_or_create\n    return self.create()\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py:116: in create\n    self._stored = self._set_driver()\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py:203: in <lambda>\n    lambda: self._set_drivers_from_webdriver_manager()\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py:277: in _set_drivers_from_webdriver_manager\n    return {\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py:252: in get_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:80: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:104: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:286: in __init__\n    self.start_session(capabilities, browser_profile)\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:378: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe66f39d690>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Chrome failed to start: exited a...\\\\n#15 0x55c42d2b9b27 \\\\u003Cunknown>\\\\n#16 0x55c42d2d4c23 \\\\u003Cunknown>\\\\n#17 0x7f862028eb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x55c42d23d243 <unknown>\nE       #1 0x55c42d0017a6 <unknown>\nE       #2 0x55c42d02a520 <unknown>\nE       #3 0x55c42d02649b <unknown>\nE       #4 0x55c42d0682a7 <unknown>\nE       #5 0x55c42d0678cf <unknown>\nE       #6 0x55c42d05ee53 <unknown>\nE       #7 0x55c42d0319ea <unknown>\nE       #8 0x55c42d032b2e <unknown>\nE       #9 0x55c42d291d5e <unknown>\nE       #10 0x55c42d295a80 <unknown>\nE       #11 0x55c42d2778b0 <unknown>\nE       #12 0x55c42d296b63 <unknown>\nE       #13 0x55c42d268f75 <unknown>\nE       #14 0x55c42d2b9998 <unknown>\nE       #15 0x55c42d2b9b27 <unknown>\nE       #16 0x55c42d2d4c23 <unknown>\nE       #17 0x7f862028eb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"window_size_1440","time":{"start":1680903191591,"stop":1680903191591,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55c42d23d243 <unknown>\n#1 0x55c42d0017a6 <unknown>\n#2 0x55c42d02a520 <unknown>\n#3 0x55c42d02649b <unknown>\n#4 0x55c42d0682a7 <unknown>\n#5 0x55c42d0678cf <unknown>\n#6 0x55c42d05ee53 <unknown>\n#7 0x55c42d0319ea <unknown>\n#8 0x55c42d032b2e <unknown>\n#9 0x55c42d291d5e <unknown>\n#10 0x55c42d295a80 <unknown>\n#11 0x55c42d2778b0 <unknown>\n#12 0x55c42d296b63 <unknown>\n#13 0x55c42d268f75 <unknown>\n#14 0x55c42d2b9998 <unknown>\n#15 0x55c42d2b9b27 <unknown>\n#16 0x55c42d2d4c23 <unknown>\n#17 0x7f862028eb43 <unknown>","statusTrace":"@allure.tag('browser')\n    @allure.severity(Severity.NORMAL)\n    @allure.label('owner', 'gipercube')\n    @allure.feature('Проверка отображения задачи #76 на github')\n    @allure.story('Я как пользовтель могу увидеть задачу с номером #76 для её открытия и оценки')\n    @allure.link('https://github.com', name='Testing')\n    def test_decorator_steps():\n        # GIVEN\n>       open_main_page()\n\ntest_selene_with_decorator.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_selene_with_decorator.py:29: in open_main_page\n    browser.open(\"https://github.com\")\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/browser.py:68: in open\n    self.config.get_or_create_driver().set_window_size(\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py:301: in get_or_create_driver\n    return self._source.get_or_create()\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py:135: in get_or_create\n    return self.create()\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py:116: in create\n    self._stored = self._set_driver()\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py:203: in <lambda>\n    lambda: self._set_drivers_from_webdriver_manager()\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py:277: in _set_drivers_from_webdriver_manager\n    return {\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py:252: in get_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:80: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:104: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:286: in __init__\n    self.start_session(capabilities, browser_profile)\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:378: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe66f39d690>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Chrome failed to start: exited a...\\\\n#15 0x55c42d2b9b27 \\\\u003Cunknown>\\\\n#16 0x55c42d2d4c23 \\\\u003Cunknown>\\\\n#17 0x7f862028eb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x55c42d23d243 <unknown>\nE       #1 0x55c42d0017a6 <unknown>\nE       #2 0x55c42d02a520 <unknown>\nE       #3 0x55c42d02649b <unknown>\nE       #4 0x55c42d0682a7 <unknown>\nE       #5 0x55c42d0678cf <unknown>\nE       #6 0x55c42d05ee53 <unknown>\nE       #7 0x55c42d0319ea <unknown>\nE       #8 0x55c42d032b2e <unknown>\nE       #9 0x55c42d291d5e <unknown>\nE       #10 0x55c42d295a80 <unknown>\nE       #11 0x55c42d2778b0 <unknown>\nE       #12 0x55c42d296b63 <unknown>\nE       #13 0x55c42d268f75 <unknown>\nE       #14 0x55c42d2b9998 <unknown>\nE       #15 0x55c42d2b9b27 <unknown>\nE       #16 0x55c42d2d4c23 <unknown>\nE       #17 0x7f862028eb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: WebDriverException","steps":[{"name":"Открыть главную страницу github.com","time":{"start":1680903191592,"stop":1680903192421,"duration":829},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55c42d23d243 <unknown>\n#1 0x55c42d0017a6 <unknown>\n#2 0x55c42d02a520 <unknown>\n#3 0x55c42d02649b <unknown>\n#4 0x55c42d0682a7 <unknown>\n#5 0x55c42d0678cf <unknown>\n#6 0x55c42d05ee53 <unknown>\n#7 0x55c42d0319ea <unknown>\n#8 0x55c42d032b2e <unknown>\n#9 0x55c42d291d5e <unknown>\n#10 0x55c42d295a80 <unknown>\n#11 0x55c42d2778b0 <unknown>\n#12 0x55c42d296b63 <unknown>\n#13 0x55c42d268f75 <unknown>\n#14 0x55c42d2b9998 <unknown>\n#15 0x55c42d2b9b27 <unknown>\n#16 0x55c42d2d4c23 <unknown>\n#17 0x7f862028eb43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa_guru_python_4_9/qa_guru_python_4_9/test_selene_with_decorator.py\", line 29, in open_main_page\n    browser.open(\"https://github.com\")\n  File \"/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/browser.py\", line 68, in open\n    self.config.get_or_create_driver().set_window_size(\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py\", line 301, in get_or_create_driver\n    return self._source.get_or_create()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py\", line 135, in get_or_create\n    return self.create()\n           ^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py\", line 116, in create\n    self._stored = self._set_driver()\n                   ^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py\", line 203, in <lambda>\n    lambda: self._set_drivers_from_webdriver_manager()\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py\", line 277, in _set_drivers_from_webdriver_manager\n    return {\n           ^\n  File \"/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selene/support/shared/config.py\", line 252, in get_chrome\n    return Chrome(\n           ^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 80, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 104, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 286, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 378, in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.2/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"owner","value":"gipercube"},{"name":"severity","value":"normal"},{"name":"tag","value":"browser"},{"name":"feature","value":"Проверка отображения задачи #76 на github"},{"name":"story","value":"Я как пользовтель могу увидеть задачу с номером #76 для её открытия и оценки"},{"name":"suite","value":"test_selene_with_decorator"},{"name":"host","value":"fv-az218-949"},{"name":"thread","value":"2288-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_selene_with_decorator"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Testing","url":"https://github.com","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","owner":"gipercube","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"3d1b0ccebde4432","reportUrl":"https://gipercube.github.io/qa_guru_python_4_9/6//#testresult/3d1b0ccebde4432","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x558235609243 <unknown>\n#1 0x5582353cd7a6 <unknown>\n#2 0x5582353f6520 <unknown>\n#3 0x5582353f249b <unknown>\n#4 0x5582354342a7 <unknown>\n#5 0x5582354338cf <unknown>\n#6 0x55823542ae53 <unknown>\n#7 0x5582353fd9ea <unknown>\n#8 0x5582353feb2e <unknown>\n#9 0x55823565dd5e <unknown>\n#10 0x558235661a80 <unknown>\n#11 0x5582356438b0 <unknown>\n#12 0x558235662b63 <unknown>\n#13 0x558235634f75 <unknown>\n#14 0x558235685998 <unknown>\n#15 0x558235685b27 <unknown>\n#16 0x5582356a0c23 <unknown>\n#17 0x7f3d0ec02b43 <unknown>","time":{"start":1680902982087,"stop":1680902982903,"duration":816}},{"uid":"c07f9c1093d215d9","reportUrl":"https://gipercube.github.io/qa_guru_python_4_9/5//#testresult/c07f9c1093d215d9","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55cb54f1c243 <unknown>\n#1 0x55cb54ce07a6 <unknown>\n#2 0x55cb54d09520 <unknown>\n#3 0x55cb54d0549b <unknown>\n#4 0x55cb54d472a7 <unknown>\n#5 0x55cb54d468cf <unknown>\n#6 0x55cb54d3de53 <unknown>\n#7 0x55cb54d109ea <unknown>\n#8 0x55cb54d11b2e <unknown>\n#9 0x55cb54f70d5e <unknown>\n#10 0x55cb54f74a80 <unknown>\n#11 0x55cb54f568b0 <unknown>\n#12 0x55cb54f75b63 <unknown>\n#13 0x55cb54f47f75 <unknown>\n#14 0x55cb54f98998 <unknown>\n#15 0x55cb54f98b27 <unknown>\n#16 0x55cb54fb3c23 <unknown>\n#17 0x7f95c2a03b43 <unknown>","time":{"start":1680902367974,"stop":1680902368765,"duration":791}}]},"tags":["browser"]},"source":"e40d24cb9a7bdaf7.json","parameterValues":[]}